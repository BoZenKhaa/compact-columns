import pandas as pd
from IPython.display import display, HTM

def compact_columns(df, level=1):
    """
    Rotates column labels in the html generated by 
    pd.DataFrame method .to_html() for better readability. 

    Params:
    df: pandas.DataFrame
    level: int, Optional (default=1)
        if the dataframe has a multiindex on columns, this param 
        specifies which level will be rotated

    Returns:
    html of the dataframe with adjust column label 
    entries and prepended <style> tag.
    
    Usage:
    df=pd.DataFrame({'First long column name':[1,2], 
                     'Second long column name':[3,4]})
    
    HTML(rotate_html_column_labels(df))
    """
    
    dfhtml = df.to_html()

    style = """
    <style>
    /*
       Vertical text
       by @kizmarh
    */
    .vertical-text {
        display: inline-block;
        overflow: hidden;
        width: 1.5em;
    }
    .vertical-text__inner {
        display: inline-block;
        white-space: nowrap;
        line-height: 1.5;
        transform: translate(0%,100%) rotate(-90deg);
        transform-origin: 0 0;
    }

    /* This element stretches the parent to be square
       by using the mechanics of vertical margins  */
    .vertical-text__inner:after {
        content: "";
        display: block;
        margin: -1.5em 0 100%;
    }
    </style>
    """

    dfhtml = style + dfhtml

    try:
        colnames = df.columns.get_level_values(level).values
    except IndexError as e:
        colnames = df.columns.values

    for name in colnames:
        dfhtml = dfhtml.replace('<th>{0}</th>'.format(name),
                                '<th><div class="vertical-text"><div class="vertical-text__inner">{0}</div></div></th>'.format(name))

    return dfhtml

df=pd.DataFrame({'First long column name':[1,2], 
                'Second long column name':[3,4]})
                
HTML(compact_columns(df))
